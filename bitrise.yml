---
format_version: '8'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: react-native
trigger_map:
  - push_branch: '*'
    workflow: StagingAppCenter
  - pull_request_source_branch: '*'
    workflow: StagingAppCenter
workflows:
  StagingAppCenter:
    steps:
      - activate-ssh-key:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone: {}
      - cache-pull: {}
      - script:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x
                git stash
                git clone https://github.com/elasticdog/transcrypt.git transcrypt
                git reset --hard HEAD
                ./transcrypt/transcrypt -c aes-256-cbc -p $TRANSCRYPT_PASSWORD -y
          title: Transcrypt
      - nvm:
          inputs:
            - node_version: ''
      - yarn:
          deps:
            brew:
              - name: yarn
          inputs:
            - workdir: '$BITRISE_SOURCE_DIR'
            - command: ''
            - args: ''
      - script:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x
                gem uninstall bundler --force
                gem install bundler --force
                bundle install
          title: Bundle install
      - script:
          run_if: false
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x
                cd ios && bundle exec pod install --repo-update && cd ..
          title: Pod install
      - script:
          title: Deploy for iOS
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x
                bundle exec fastlane ios staging
      - script:
          title: Deploy for Android
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x
                bundle exec fastlane android staging
      - cache-push:
          inputs:
            - ignore_check_on_paths: |-
                $HOME/.gradle/caches/*.lock
                $HOME/.gradle/caches/*.bin
                ./android/.gradle/*.lock
                ./android/.gradle/*.bin
            - cache_paths: |-
                ./node_modules -> package.json
                ./ios/Pods -> ./ios/Podfile
                $HOME/.gradle
                ./android/.gradle
  StagingCodePush:
    steps:
      - activate-ssh-key:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone: {}
      - cache-pull: {}
      - script:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x
                git stash
                git clone https://github.com/elasticdog/transcrypt.git transcrypt
                git reset --hard HEAD
                ./transcrypt/transcrypt -c aes-256-cbc -p $TRANSCRYPT_PASSWORD -y
          title: Transcrypt
      - nvm: {}
      - yarn@0.1.0:
          inputs:
            - command: global add appcenter-cli
      - script:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x
                gem uninstall bundler --force
                gem install bundler --force
                bundle install
          title: Bundle install
      - yarn:
          title: yarn
      - script:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x
                appcenter login --token $CODE_PUSH_ACCESS_KEY
          title: Auth
      - yarn:
          deps:
            brew:
              - name: yarn
          inputs:
            - workdir: '$BITRISE_SOURCE_DIR'
            - command: deploy
            - args: ''
          title: yarn deploy
      - cache-push@2.2.3: {}
  ProdStore:
    steps:
      - activate-ssh-key:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone: {}
      - cache-pull: {}
      - script:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x
                git stash
                git clone https://github.com/elasticdog/transcrypt.git transcrypt
                git reset --hard HEAD
                ./transcrypt/transcrypt -c aes-256-cbc -p $TRANSCRYPT_PASSWORD -y
          title: Transcrypt
      - nvm:
          inputs:
            - node_version: ''
      - yarn:
          deps:
            brew:
              - name: yarn
          inputs:
            - workdir: '$BITRISE_SOURCE_DIR'
            - command: ''
            - args: ''
      - script:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x
                gem uninstall bundler --force
                gem install bundler --force
                bundle install
          title: Bundle install
      - script:
          run_if: false
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x
                cd ios && bundle exec pod install --repo-update && cd ..
          title: Pod install
      - script:
          title: Deploy for iOS
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x
                bundle exec fastlane ios prod
      - script:
          title: Deploy for Android
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x
                bundle exec fastlane android prod
      - cache-push:
          inputs:
            - ignore_check_on_paths: |-
                $HOME/.gradle/caches/*.lock
                $HOME/.gradle/caches/*.bin
                ./android/.gradle/*.lock
                ./android/.gradle/*.bin
            - cache_paths: |-
                ./node_modules -> package.json
                ./ios/Pods -> ./ios/Podfile
                $HOME/.gradle
                ./android/.gradle
  ProdCodePush:
    steps:
      - activate-ssh-key:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone: {}
      - cache-pull: {}
      - script:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x
                git stash
                git clone https://github.com/elasticdog/transcrypt.git transcrypt
                git reset --hard HEAD
                ./transcrypt/transcrypt -c aes-256-cbc -p $TRANSCRYPT_PASSWORD -y
          title: Transcrypt
      - nvm: {}
      - yarn@0.1.0:
          inputs:
            - command: global add appcenter-cli
      - script:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x
                gem uninstall bundler --force
                gem install bundler --force
                bundle install
          title: Bundle install
      - yarn:
          title: yarn
      - script:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x
                appcenter login --token $CODE_PUSH_ACCESS_KEY
          title: Auth
      - yarn:
          deps:
            brew:
              - name: yarn
          inputs:
            - workdir: '$BITRISE_SOURCE_DIR'
            - command: deploy
            - args: ''
          title: yarn deploy:prod
      - cache-push@2.2.3: {}
app:
  envs:
    - opts:
        is_expand: false
      PROJECT_LOCATION: android
    - opts:
        is_expand: false
      MODULE: app
    - opts:
        is_expand: false
      VARIANT: ''
    - opts:
        is_expand: false
      BITRISE_PROJECT_PATH: ios/WorkoutApp.xcworkspace
    - opts:
        is_expand: false
      BITRISE_SCHEME: WorkoutApp
    - opts:
        is_expand: false
      BITRISE_EXPORT_METHOD: ad-hoc
